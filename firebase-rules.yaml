functions:
  - isUser(user): auth.uid !== null && auth.uid === user
  - hasRole(roleName): root.users[auth.uid].role === roleName
  - isBoardMember(): hasRole('Board Member')
  - isAdmin(): hasRole('Admin')
  - isManager(): hasRole('Admin') || hasRole('Board Member')
  - isVerified(): root.users[auth.uid].role !== 'Unverified' && root.users[auth.uid].role.exists()

schema:
  type: object
  properties:
    users:
      type: object
      $userId:
        type: object
        constraint: isUser($userId) || isManager()
        properties:
          role:
            type: string
            constraint: isManager() && next !== 'Admin'
          name:
            type: string


access:
  - location: /
    read:  isVerified()
    write: true
