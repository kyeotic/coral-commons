var fs = require("fs");

var blaze = require('../src/blaze');
var compiler = require('../src/compiler');

var globals = require('../src/globals');

function run() {
    globals.debug = true;

    console.log("working?", checkScenario("./test/scenarios/accessContext.yaml"));
}

var checkScenario = function (path) {
    var scenario = blaze.load_yaml(path);
    var source = scenario.getOrThrow("source", "scenario has no 'source' attached " + path);

    if (scenario.has("expectedError")) {
        var expectedError = scenario.getOrThrow("expectedError", "scenario has no 'expected' outcome " + path);
        var result = compiler.compileJSON(source);

        return false;
    } else {
        var expected = scenario.getOrThrow("expected", "scenario has no 'expected' outcome " + path);
        var result = compiler.compileJSON(source);
        var expectedNormalised = JSON.stringify((expected.toJSON()));
        var resultNormalised = JSON.stringify(JSON.parse(result.code));
        console.log("expectedNormalised", expectedNormalised);
        console.log("resultNormalised  ", resultNormalised);
        return expectedNormalised == resultNormalised;
    }
};

function testFiles(test) {
    globals.debug = false;

    var files = fs.readdirSync("test/scenarios");

    for (var i in files) {
        if (!files.hasOwnProperty(i))
            continue;

        var path = "test/scenarios/" + files[i];

        console.log("checking", path);
        test.ok(checkScenario(path), "error on file " + path);
    }
    test.done();
}
exports.testFiles = testFiles;

run();
//# sourceMappingURL=scenarios_test.js.map
