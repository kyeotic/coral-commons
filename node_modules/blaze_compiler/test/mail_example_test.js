var test_utils = require('./test_utils');
var firebase_io = require('./firebase_io');
var compiler = require('../src/compiler');

var async = require('async');

function testSetup(test) {
    async.series([
        firebase_io.setValidationRules.bind(null, compiler.compile("examples/mail_example.yaml", true).code)
    ], test.done.bind(null));
}
exports.testSetup = testSetup;

function testWriteInbox(test) {
    async.series([
        test_utils.assert_admin_can_write.bind(null, "/", {}, test),
        test_utils.assert_cant_write.bind(null, "tom", "/users/bill/inbox/1", {
            from: "george",
            to: "bill",
            message: "Hi Bill!"
        }, test),
        test_utils.assert_cant_write.bind(null, "tom", "/users/bill/inbox/1", {
            from: "tom",
            to: "bill",
            message: "Hi Bill!",
            spurious: "spurious data"
        }, test),
        test_utils.assert_can_write.bind(null, "tom", "/users/bill/inbox/1", {
            from: "tom",
            to: "bill",
            message: "Hi Bill!"
        }, test),
        test_utils.assert_cant_write.bind(null, "tom", "/users/bill/inbox/1", {}, test),
        test_utils.assert_cant_write.bind(null, "bill", "/users/bill/inbox/1/message", "bill gets my inheritance", test),
        test_utils.assert_cant_write.bind(null, "bill", "/users/bill/inbox/1/from", "bill", test)
    ], test.done.bind(null));
}
exports.testWriteInbox = testWriteInbox;

function testDeleteInbox(test) {
    async.series([
        test_utils.assert_admin_can_write.bind(null, "/", {}, test),
        test_utils.assert_can_write.bind(null, "tom", "/users/bill/inbox/1", {
            from: "tom",
            to: "bill",
            message: "Hi Bill!"
        }, test),
        test_utils.assert_cant_write.bind(null, "tom", "/users/bill/inbox/1", {}, test),
        test_utils.assert_can_write.bind(null, "bill", "/users/bill/inbox/1", {}, test)
    ], test.done.bind(null));
}
exports.testDeleteInbox = testDeleteInbox;

function testWriteOutbox(test) {
    async.series([
        test_utils.assert_admin_can_write.bind(null, "/", {}, test),
        test_utils.assert_cant_write.bind(null, "bill", "/users/bill/outbox/1", {
            from: "joe",
            to: "tom",
            message: "Hi Tom!"
        }, test),
        test_utils.assert_cant_write.bind(null, "bill", "/users/bill/outbox/1", {
            from: "bill",
            to: "tom",
            message: "Hi Tom!",
            spurious: "spurious"
        }, test),
        test_utils.assert_can_write.bind(null, "bill", "/users/bill/outbox/1", {
            from: "bill",
            to: "tom",
            message: "Hi Tom!"
        }, test),
        test_utils.assert_cant_write.bind(null, "tom", "/users/bill/outbox/1", {}, test),
        test_utils.assert_cant_write.bind(null, "bill", "/users/bill/outbox/1/message", "bill gets my inheritance", test),
        test_utils.assert_cant_write.bind(null, "bill", "/users/bill/outbox/1/from", "bill", test)
    ], test.done.bind(null));
}
exports.testWriteOutbox = testWriteOutbox;

function testDeleteOutbox(test) {
    async.series([
        test_utils.assert_admin_can_write.bind(null, "/", {}, test),
        test_utils.assert_can_write.bind(null, "bill", "/users/bill/outbox/1", {
            from: "bill",
            to: "tom",
            message: "Hi Tom!"
        }, test),
        test_utils.assert_cant_write.bind(null, "tom", "/users/bill/outbox/1", {}, test),
        test_utils.assert_can_write.bind(null, "bill", "/users/bill/outbox/1", {}, test)
    ], test.done.bind(null));
}
exports.testDeleteOutbox = testDeleteOutbox;

function testReadboxes(test) {
    async.series([
        test_utils.assert_admin_can_write.bind(null, "/", {}, test),
        test_utils.assert_can_write.bind(null, "bill", "/users/bill/outbox/1", {
            from: "bill",
            to: "tom",
            message: "Hi Tom!"
        }, test),
        test_utils.assert_can_write.bind(null, "tom", "/users/bill/inbox/1", {
            from: "tom",
            to: "bill",
            message: "Hi Bill!"
        }, test),
        test_utils.assert_cant_read.bind(null, "tom", "/users/bill/outbox/1", test),
        test_utils.assert_cant_read.bind(null, "tom", "/users/bill/inbox/1", test),
        test_utils.assert_can_read.bind(null, "bill", "/users/bill/outbox/1", {
            from: "bill",
            to: "tom",
            message: "Hi Tom!"
        }, test),
        test_utils.assert_can_read.bind(null, "bill", "/users/bill/inbox/1", {
            from: "tom",
            to: "bill",
            message: "Hi Bill!"
        }, test)
    ], test.done.bind(null));
}
exports.testReadboxes = testReadboxes;
//# sourceMappingURL=mail_example_test.js.map
